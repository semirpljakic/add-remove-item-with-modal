{"version":3,"sources":["tutorial/Modal.js","tutorial/Index.js","App.js","index.js"],"names":["Modal","modalContent","closeModal","useEffect","setTimeout","className","reducer","state","action","console","log","type","newPeople","people","payload","isModalOpen","filter","person","id","defaultState","Index","useState","name","setName","useReducer","dispatch","onSubmit","e","preventDefault","newItem","Date","getTime","toString","value","onChange","target","map","key","onMouseDown","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAeeA,EAbD,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WAM7B,OALAC,qBAAU,WACRC,YAAW,WACTF,MACC,QAGH,yBAAKG,UAAU,SACb,2BAAIJ,KCNJK,EAAU,SAACC,EAAOC,GAEtB,GADAC,QAAQC,IAAIH,GACQ,aAAhBC,EAAOG,KAAqB,CAC9B,IAAMC,EAAS,sBAAOL,EAAMM,QAAb,CAAqBL,EAAOM,UAC3C,OAAO,2BACFP,GADL,IAEEM,OAAQD,EACRG,aAAa,EACbd,aAAc,eAGlB,GAAoB,aAAhBO,EAAOG,KACT,OAAO,2BAAKJ,GAAZ,IAAmBQ,aAAa,EAAMd,aAAc,uBAEtD,GAAoB,gBAAhBO,EAAOG,KACT,OAAO,2BAAKJ,GAAZ,IAAmBQ,aAAa,IAElC,GAAoB,gBAAhBP,EAAOG,KAAwB,CACjC,IAAMC,EAAYL,EAAMM,OAAOG,QAC7B,SAAAC,GAAM,OAAIA,EAAOC,IAAMV,EAAOM,WAEhC,OAAO,2BACFP,GADL,IAEEM,OAAQD,EACRG,aAAa,EACbd,aAAc,iBAIlB,OAAOM,GAGHY,EAAe,CACnBN,OAAQ,GACRE,aAAa,EACbd,aAAc,IAwDDmB,EArDD,WAAO,IAAD,EACMC,mBAAS,IADf,mBACXC,EADW,KACLC,EADK,OAEQC,qBAAWlB,EAASa,GAF5B,mBAEXZ,EAFW,KAEJkB,EAFI,KAkBlB,OACE,oCACE,0DAEClB,EAAMQ,aACL,kBAAC,EAAD,CAAOb,WARM,WACjBuB,EAAS,CAAEd,KAAM,iBAOkBV,aAAcM,EAAMN,eAGrD,0BAAMI,UAAU,OAAOqB,SAtBN,SAAAC,GAEnB,GADAA,EAAEC,iBACEN,EAAM,CACR,IAAMO,EAAU,CAAEX,IAAI,IAAIY,MAAOC,UAAUC,WAAYV,QACvDG,EAAS,CAAEd,KAAM,WAAYG,QAASe,IACtCN,EAAQ,SAERE,EAAS,CAAEd,KAAM,eAgBf,6BACE,2BACEA,KAAK,OACLsB,MAAOX,EACPY,SAAU,SAAAP,GAAC,OAAIJ,EAAQI,EAAEQ,OAAOF,WAGpC,4BAAQtB,KAAK,UAAb,QAEDJ,EAAMM,OAAOuB,KAAI,SAAAnB,GAAW,IACnBC,EAAaD,EAAbC,GAAII,EAASL,EAATK,KACZ,OACE,yBAAKjB,UAAU,OAAOgC,IAAKnB,GACzB,4BAAKI,GACL,4BACEgB,YAAa,kBAAMb,EAAS,CAAEd,KAAM,cAAeG,QAASI,MAD9D,gBCxEGqB,MARf,WACE,OACE,yBAAKlC,UAAU,aACb,kBAAC,EAAD,QCDNmC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.af67b9bd.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nconst Modal = ({ modalContent, closeModal }) => {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      closeModal();\r\n    }, 2000);\r\n  });\r\n  return (\r\n    <div className='modal'>\r\n      <p>{modalContent}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useReducer } from 'react';\r\nimport Modal from './Modal';\r\nimport { data } from '../data';\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(state);\r\n  if (action.type === 'ADD_ITEM') {\r\n    const newPeople = [...state.people, action.payload];\r\n    return {\r\n      ...state,\r\n      people: newPeople,\r\n      isModalOpen: true,\r\n      modalContent: 'item added',\r\n    };\r\n  }\r\n  if (action.type === 'NO_VALUE') {\r\n    return { ...state, isModalOpen: true, modalContent: 'please enter value' };\r\n  }\r\n  if (action.type === 'CLOSE_MODAL') {\r\n    return { ...state, isModalOpen: false };\r\n  }\r\n  if (action.type === 'REMOVE_ITEM') {\r\n    const newPeople = state.people.filter(\r\n      person => person.id != action.payload\r\n    );\r\n    return {\r\n      ...state,\r\n      people: newPeople,\r\n      isModalOpen: true,\r\n      modalContent: 'item removed',\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst defaultState = {\r\n  people: [],\r\n  isModalOpen: false,\r\n  modalContent: '',\r\n};\r\n\r\nconst Index = () => {\r\n  const [name, setName] = useState('');\r\n  const [state, dispatch] = useReducer(reducer, defaultState);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (name) {\r\n      const newItem = { id: new Date().getTime().toString(), name };\r\n      dispatch({ type: 'ADD_ITEM', payload: newItem });\r\n      setName('');\r\n    } else {\r\n      dispatch({ type: 'NO_VALUE' });\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    dispatch({ type: 'CLOSE_MODAL' });\r\n  };\r\n  return (\r\n    <>\r\n      <h4>add/Remove item with modal</h4>\r\n\r\n      {state.isModalOpen && (\r\n        <Modal closeModal={closeModal} modalContent={state.modalContent} />\r\n      )}\r\n\r\n      <form className='form' onSubmit={handleSubmit}>\r\n        <div>\r\n          <input\r\n            type='text'\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type='submit'>add</button>\r\n      </form>\r\n      {state.people.map(person => {\r\n        const { id, name } = person;\r\n        return (\r\n          <div className='item' key={id}>\r\n            <h4>{name}</h4>\r\n            <button\r\n              onMouseDown={() => dispatch({ type: 'REMOVE_ITEM', payload: id })}\r\n            >\r\n              remove\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React from 'react';\r\nimport Setup from './tutorial/Index';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='container'>\r\n      <Setup />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}